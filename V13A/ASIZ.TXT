Program ASIZ - Analysis of switched-current filters
---------------------------------------------------

Documentation for version 1.3a.

Introduction
------------

     The ASIZ program analyzes switched-current (SI),  switched-capacitor 
(SC) filters, or any periodically switched Gm-C circuit where the circuit 
stabilizes between the switching instants. The program can compute:

Z-transform transfer functions.
Poles and zeros.
Frequency responses.
Time responses.
Frequency response sensitivities.
Effects of nonideal transistors in switched-current circuits.
Errors due to component tolerances.
Output frequency spectrum.

     The outputs of the analyses can be plotted on the screen and sent to 
a report file. The description of the circuit to be analyzed is read from 
a text file, but all the commands are given interactively in a  graphical 
user interface.

Input
-----

     The circuit to be analyzed must be described by its small-signal  AC 
model (the normal structure for a SC circuit, and the circuit without the 
bias  sources  for a SI circuit). The circuit description is given  by  a 
text file, in the format:

First line: number of nodes in the circuit. 
Following lines: One element description per line: 

-       MOS transistor:
        M<name> <drain node> <gate node> <source node> <Gm> <Gds>
-       Resistor:
        R<name> <node 1> <node 2> <resistance>
-       Capacitor:
        C<name> <node 1> <node 2> <number of unit capacitances>
-       Current source:
        I<name> <node +> <node -> <current>
-       Voltage source:
        V<name> <node +> <node -> <voltage>
-       Switch:
        S<name> <node 1> <node 2> <phase> [<phase>...]
-       Transconductor:
        G<name> <node I+> <node I-> <node V+> <node V-> <Gm>
-       Ideal operational amplifier:
        O<name> <input node> <input node> <output node>
-       Voltage amplifiers:
-       E<name> <node Vo+> <node Vo-> <node Vi+> <node Vo-> <Av>
-       A<name> <node Vi-> <node Vi+> <node Vo> <Av>

     The  nodes  are enumerated from 1 to the number  of  nodes,  without 
missing  numbers. 0 is the ground node. The phases are enumerated from  1 
to the number of phases.

     The description can be generated by the EdFil editor program. 

Models for the elements
-----------------------

     The  MOS transistors can be n-channel or p-channel. The AC model  is 
the  same for both. A transistor is modeled by a transconductance  Gm,  a 
Gds  conductance , a Cgs capacitance, and a Cgd capacitance. Gm  and  Gds 
are  given  in the netlist file, and the other parameters can be  set  in 
several ways in the mosfet parameters window.

     Resistors can be used to convert currents into voltages and to model 
losses  in  switches and DC current sources. Isolated capacitors  can  be 
used in the analysis of switched-capacitor filters, and the simulation of 
parasitic capacitance effects. The current sources feed the input  signal 
to SI filters, and voltage sources are the inputs for SC filters.  Trans-
conductors can be used to model OTAs, and other functions. Voltage ampli-
fiers  can  model finite-gain operational amplifiers in SC  filters,  and 
other  functions. For convenience in using the EdFil editor, two  formats 
are  accepted  ("E" and "A"). Ideal operational amplifiers  are  used  in 
switched-capacitor filters and in precision switched-current filters.

     The  switching period is considered subdivided in a number of  equal 
duration  phases. A switch can be open or closed in any of these  phases. 
The phase list in the description of the switch indicates in which phases 
it is closed. The input signal is considered sampled at the beginning  of 
each phase (continuous signal feedthrough is ignored). The values of  the 
input current sources are just scaling factors for the same input signal.

Output
------

     The  program  computes nodal voltages (in z-transform).  In  the  AC 
small-signal  model the relation between gate-source voltages  and  drain 
currents of MOS transistor is linear (and the Cgs and other  capacitances 
are  also linear), and the output signal can be taken in a  switched-cur-
rent filter as the gate voltage of the transistor that produces the  out-
put current. Alternatively, more realistically, a resistor can be used to 
sample  the output current. In this case, the results are also valid  for 
large signals. 

     The  voltages in the adjoint network are also available. It must  be 
observed that some "voltages" in the adjoint network (at "high impedance" 
nodes) have no physical meaning, because they belong to capacitive  nodes 
fed  by current sources. Those "voltages" are used only  for  sensitivity 
calculations,  where  their "infinite" values are  multiplied  by  "zero" 
conductances, producing finite (and correct) current values. When voltage 
sources  are used, additional variables are computed in the adjoint  net-
work, indexed with numbers above the numbers of nodes. They represent the 
negative  of the currents in the voltage sources in the adjoint  network, 
and  are used in sensitivity calculations. Note that the adjoint  network 
is  not  physically realizable, because in it the capacitors  retain  the 
voltage of the next phase, not of the last.

     The voltages computed can be interpreted as the responses of a peri-
odically  switched Gm-C circuit, where the currents (and, in  the  normal 
circuit,  voltages)  are allowed to reach the steady  state  between  the 
switching instants.

     There  are restrictions on the topology of the circuits that can  be 
analyzed: All the resistive portions must have a connection to the signal 
ground at all the phases and current sources cannot be connected to pure-
ly  capacitive nodes (or the program will produce singular equation  sys-
tems). This normally happens in any practical circuit topology. 

Program operation
-----------------

Netlist:

     The program begins by presenting a directory list and text fields to 
be filled with the name of the input netlist file and the number of  pha-
ses.  The file name can be selected with the mouse in the directory  win-
dow,  or be given in the DOS command line. The button "Read"  starts  the 
reading of the file.

Analysis:

     After  the  reading, a window with several  analysis  parameters  is 
presented.  Usually only the output node and the sampling parameters  are 
used. The others rarely must be changed. The button "Analyze" starts  the 
analysis.

     At  the end of the analysis, the computed denominator, or  characte-
ristic  polynomial of the circuit, is listed, and are presented a  window 
with  numerator parameters and a menu with the display options. Once  the 
numerator parameters are set to the desired values, the different  analy-
ses  in  the menu can be made in any order. The menu can be  reopened  by 
pressing the right mouse button on the frame of any window.

Frequency response:

     The frequency response can be plotted for any transfer function.  It 
is plotted in the program main window, with several options selectable in 
the frequency response parameters window. The same plot is also used  for 
the  display of error limits (sensitivity) and spectral  components  (see 
below).

Transient response:

     Time responses for several test inputs can be plotted, also for  any 
transfer function. They are plotted in a secondary window. The  transient 
response parameters window holds the controls for the several options.

Poles and zeros:

     Poles and zeros of any transfer function can be computed and plotted 
in  a  window or listed. Along with the frequencies, the unit  circle  is 
also  plotted  for  reference.  The poles  and  zeros  parameters  window 
controls how the poles and zeros are computed and displayed.

Output spectrum:

     The  output  spectrum components for a sinusoidal input at  a  given 
frequency  can  be plotted, superimposed on the main  frequency  response 
plot.  The spectrum computation can be started from the  output  spectrum 
parameters  window, or directly from the frequency response  window.  All 
the spectrum components that are in the frequency range selected for  the 
main  transfer  function are computed. The output spectrum  is  available 
only for normal transfer functions.

Sensitivities:

     Sensitivities from a transfer function in relation to the  variation 
of  a selected group of circuit parameters can be computed,  and  plotted 
along  with  the gain and phase curves in the frequency  response  (main) 
window,  as  errors in decibels and degrees superimposed  on  the  curves 
shown. The errors can be computed as deterministic deviations (sum of the 
errors  due  to all the selected parameters)  or  statistical  deviations 
(square  root of the sum of the squares of the errors due to all the  se-
lected  parameters). All the selected parameters are assumed to have  the 
same variability. Note that the sensitivities of just one nodal  voltage, 
the  one specified in the analysis parameters window at the start of  the 
program,  are  available after the initial analysis,  although  frequency 
responses  of any nodal voltage are always available  without  recalcula-
tion. The computation of errors due to a large group of parameters may be 
slow.  The sensitivities of the transfer function in relation to the  va-
lues of all the selected elements can be listed, by pressing "s" when the 
cursor is at the desired frequency in the frequency response graph.

Correlated elements:

     For  the  statistical deviation computation,  groups  of  correlated 
elements can be specified. These elements have their sensitivities  added 
and are treated as a single element in the computation. To select  corre-
lations,  press one of the keys "a".."z" before selecting  elements  with 
the  mouse left button. All the elements marked with a same  letter  will 
belong  to a group of correlated elements. To make elements  uncorrelated 
with the others, press the "*" key before selecting the elements with the 
mouse. The current selection of elements and correlations can be saved to 
a file or read back.

References:

     Frequency  responses and transient responses can be saved  as  refe-
rences (the commands are in the graphic windows menus), and plotted along 
with  others  of the same circuit or of another circuit  for  comparison. 
Sensitivity curves cannot be saved as references. It is also possible  to 
command the program to do not clear the frequency response window  before 
plotting  a new curve (press "x"). In this way any number of  references, 
with error curves, can be accumulated.

Report file:

     The same menus allow the saving of the analyses results in a  report 
file.  The messages window can also be saved in the report file. For  the 
frequency  response,  a table is generated containing:  frequency,  gain, 
phase,  gain  error, phase error, minimum gain limit,  and  maximum  gain 
limit, as columns of values. The errors are listed only if the sensitivi-
ty analysis is selected.

MOS transistor parameters:

     It  is  possible to include parasitic effects in the  circuit  in  a 
simple  way using the commands in the mosfet parameters window.  Once  an 
item  is changed, the circuit must be read again and reanalized. The  ne-
cessary windows open automatically.
     
Direct command in the windows
-----------------------------

Pole/zero graph:

- Cursor, +, -: Move the graph and changes the scale.
- Mouse middle button: Move the cursor.
- G: Toggles the drawing of a grid.
- Esc: Exits the graph.
- Mouse left button: Dragging the mouse defines zoom area.

Frequency response graph:

- Horizontal cursor or mouse middle button: Cursor.
- A, R, +, -: Change the horizontal and vertical scales.
- Vertical cursor, <(,), >(.): Panning.
- L: Changes the horizontal scale between log. and linear.
- F: Toggles the drawing of phase curves.
- Mouse left button: Dragging the mouse defines zoom area.
- G: Toggles the drawing of the grid.
- C: Changes between color and b&w picture.
- I: Inverts the colors.
- S: List all the selected sensitivities at the cursor frequency.
- E: Plots the spectrum components for an input at the cursor frequency.
- W: Lists the same spectrum.
- X: Toggles the clearing of the window before the plotting.
     (Useful for sensitivity comparisons.)

(G, C, and I affect the other plots also, when they are redrawn).

Transient response graph:

- Horizontal cursor or mouse middle: Move the cursor.
- A, R, +, -: Change the horizontal and vertical scales.
- G: Toggles the drawing of a grid.

     The  direct commands in graph windows only work when the graphs  are 
valid.  If  some parameter is changed in some window that  invalidates  a 
graph, it remains unchangeable until redrawn.

     Each graph has a menu of options, presented before the plotting  and 
also accessible through the graph menu, where scales and other parameters 
can be directly specified.

Observations
------------

Graphics mode:

     The graphics mode can be specified in the command line, in the form:
ASIZ <netlist file> <driver> <mode>
Where the driver and mode numbers specify the BGI driver (Turbo Pascal 7) 
and the mode to be used in the plots. Ex: 2 5 produces a b&w 640x480 mode 
on VGA boards, that uses little memory.

User interface:

     The program uses an interface with graphic windows, where the  mouse 
commands all the actions:
The  left  button is used to press buttons, select menu  items  (even  if 
pressed  with  the mouse out of the menu area), select  text  fields  for 
edition, and move and resize windows.
The middle button closes a window if pressed on its frame. It also closes 
menus without selecting an item.
The right button opens menus. There are menus in most of the windows  (in 
their frames), and in the graphic areas.
The  interface  works with all the graphics boards supported by  the  BGI 
drivers. 
Window movement and opening can be impossible due to memory  limitations. 
The program beeps when this happens.
The  program  can be operated without a mouse. If a mouse driver  is  not 
found, an emulated mouse appears, that is operated with the cursor  keys. 
The  three  buttons are replaced by the return (left), esc  (middle)  and 
space  (right) keys. If Caps Lock is active, the keys operate  in  toggle 
mode  (for  dragging, for example). If Scroll Lock is active,  the  mouse 
emulation is disabled, so the keyboard can be used normally.
A two-buttons mouse can also be used. Windows and menus can be closed  by 
pressing the two buttons simultaneously.

Poles and zeros:

     The  default tolerances and initial approximations in the poles  and 
zeros parameters window are sufficient for most usual cases, but they can 
have to be changed in some cases. The most usual problems are with groups 
of closely spaced roots that the program interprets as a multiple root or 
of  a  multiple root that the program interprets as a  group  of  closely 
spaced  roots. The parameter of "magnitude tolerance" can be adjusted  to 
guide  the routine to the correct result: Smaller values  force  multiple 
roots  and higher values force distinct roots. The routine can also  have 
problems of convergence. It will lower the tolerance for the roots  until 
they  can be found. Poles and zeros are computed in the  z^(1/f)  domain, 
where  f is the number of phases. A complete turn around the unit  circle 
corresponds to f times the switching frequency.

Global and Partial numerators:

     The global transfer function of a switched circuit with f phases  is 
the composition of fxf partial transfer functions, from each phase at the 
input  to each phase at the output. The denominator of all the  functions 
is  the same, but the numerators are different. The program computes  all 
the partial numerators and adds them to obtain the global numerator  (The 
sampling  operation divides the sum by f in the frequency  response,  and 
the time separation of the phases does the same in the transient  respon-
se.  Due  to this, the global numerator coefficients, as  listed,  appear 
multiplied  by  f). Usually the designed digital transfer function  of  a 
filter is one of the partial transfer functions. Zeros, frequency respon-
ses,  sensitivities, and transient responses can be computed for all  the 
partial transfer functions.

Switched-current filters:

     All the biasing DC current sources must be omitted from the descrip-
tion (remember: ALL the sources are AC). They can also be substituted  by 
resistors representing their output resistances, but it is more practical 
to set a convenient value for Gds in the mosfet parameters window. 

Switched-capacitor filters:

     Finite-gain  voltage amplifiers and voltage sources can be used  di-
rectly. Alternatively, a current source or a transconductor with a resis-
tor  in parallel with its output is equivalent to a voltage source  or  a 
voltage amplifier, for capacitive loads. Note that the ideal  operational 
amplifier  is really ideal, and reduces the size of the systems of  equa-
tions that the program solves when used.

Sensitivities:

     In  proper  switched-current filters, the sensitivities to  all  the 
capacitances are always null (or low, if parasitic capacitances, as  Cgd, 
are included). As default, the program marks the transconductors to  have 
their sensitivities computed, because only they are significant in  ideal 
SI filters.

Sampling:

     The program assumes that the input is sampled once at each phase. If 
it  is not the case, a sample/hold circuit can be added at the  input  (a 
switch,  a capacitor, and a buffer circuit). Continuous coupling  through 
the  circuit is not considered. The program also assumes that the  output 
is  observed at all the phases. This can cause some confusion if the  im-
pulse  sampling is used, because even if the output varies only once  per 
period, the output exhibits f impulses per period. This causes the  appe-
arance of extra zeros in the transfer function (at multiples of the  sam-
pling  frequency,  if all the impulses are equal). The  artifact  can  be 
eliminated  by  grounding the output at all the phases,  except  the  one 
where the output changes.

Output spectrum:

     For usual filters, the output spectrum components appear at all  the 
frequencies  in the form n<sampling frequency>+/-<input  frequency>,  and 
the amplitudes agree with the main transfer function amplitudes at  those 
frequencies.  This  is not always true, because  modulation  effects  can 
affect  the spectrum components, causing some of them to disappear or  to 
assume different values. The program takes all these effects into  consi-
deration.

Valid results:

     It must be noted that the program assumes that all the elements  are 
linear (small-signal model). The results are valid for large signals only 
if certain topologic restrictions (switched-current or switched-capacitor 
techniques) are followed. Also, the program assumes that switching  tran-
sients are much faster that the switching period.

Analysis method:

     The analysis method used by the program was described in the  paper: 
"Systematic  nodal analysis of switched-current filters," by A. C. M.  de 
Queiroz,  P.  R. M. Pinheiro, and L. P. Caloba, proceedings of  the  1991 
IEEE  ISCAS,  Singapore, pp. 1801-1804, June 1991. A more  detailed  des-
cription  appeared in the paper "Nodal analysis of switched-current  fil-
ters," IEEE Transactions on Circuits and Systems-II, vol. 40, no. 1,  Ja-
nuary  1993, pp. 10-18, and a still more detailed description is  in  the 
book  "Switched-Currents: An Analogue Technique for Digital  Technology", 
edited  by C. Toumazou, N. C. Battersby, and J. B. Hughes, and  published 
by the IEE in 1993. 

Protected mode:

     The program named ASIZ-P works in protected mode on a PC with a 286, 
386  or 486 processor with extended memory. It can analyze   bigger  cir-
cuits, with more phases, use more references and open more windows,  even 
with  the  editor program resident and running under Windows.  The  files 
RTM.EXE  and DMPI16BI.OVL must be present on the DOS path, or some  other 
DPMI driver must be installed.

Main revisions:
Version 1.3a: An optimization in numerical procedures increased  signifi-
cantly  the  analysis speed. 2-3x for two-phases circuits, and  more  for 
more phases.
Version  1.3:  Output  spectrum calculation included.  Retaining  of  the 
frequency response graph (command "X") added. Corrected potential problem 
in the saving of the sensitivity selection.
Version 1.2d: Corrected a bug in the number of phases in references.
Version 1.2c: Frequency responses and sensitivities are now available for 
the  partial transfer functions. The sensitivity calculation was  optimi-
zed, and is now 2 or 3 times faster.
Version 1.2b: The impulse input now lasts for one entire period, and  the 
plotting of the input in the transient response is optional.
Version 1.2a: More correlated groups. Most recent versions compiled  with 
slightly changed interface.
Version 1.2: Groups of correlated elements in the statistical deviation.
Version 1.1b: Sensitivities can be listed.
Version 1.1a: Voltage sources included.
Version  1.1: Memory allocation improved to allow the analysis of  larger 
circuits.  The  program now accepts circuits of up to 200  nodes  and  16 
phases, resulting in systems of up to 400 equations.

Files on the disk or compressed file
------------------------------------

ASIZ.EXE - The SI analysis program.
ASIZ-1.EXE - Single precision version, for PCs without a coprocessor.
ASIZ-P.EXE - Idem, in protected-mode, for 286 and up.
ASIZ.TXT - Documentation for the ASIZ program.
EXAMPLES.TXT - Description of the examples.
EDFIL.EXE - Circuit schematic editor.
RTM.EXE - Used by protected mode programs. Must be in the path.
DMI16BI.OVL - Idem.
*.BGI - Turbo Pascal 7 graphics drivers. Must be on a path pointed by the 
DOS environment variable "TPBGI".
LITT.CHR - Small font file. Idem.
*.CIR - Schematic circuit files for EdFil.
*.NET - Netlist files.
*.VAL - Value list files for Edfil.

Special versions
----------------

     Versions of the ASIZ and EdFil programs compiled with GNU C  (djgpp) 
are also available from the same site. These programs accept larger  cir-
cuits. The X_EdFil program uses an interface as the one of the ASIZ  pro-
gram,  and  the X_ASIZ program is somewhat faster than  the  normal  ASIZ 
program.
     Versions  of  the ASIZ and EdFil programs for Sun  workstations  are 
also  available. Contact the author (by e-mail, preferably) for more  in-
formation.

Distribution and use
--------------------

     The ASIZ program can be distributed freely for educational purposes, 
as long as no charge is made, it is not changed in any way, and reference 
to its use is made in any work done with its help.
     For commercial utilization, a registration fee is required.  Contact 
the author. 
     The  author  believes that the program works correctly,  but  cannot 
assume  responsibility  for losses caused by flaws in  the  program  that 
escaped his attention.
     The  most current version of the program and auxiliary files can  be 
obtained by "anonymous ftp" in the Internet, at the directory  "pub/acmq" 
at the site "coe.ufrj.br".
     Users  are  encouraged  to send a letter or  e-mail  to  the  author 
telling how the program is being used.
     Comments,  suggestions and questions about the  program  utilization 
shall be sent to:

Dr. Antonio Carlos M. de Queiroz
Programa de Engenharia Eletrica
COPPE - Universidade Federal do Rio de Janeiro
CP 68504
21945-970, Rio de Janeiro, RJ, Brazil

or, via e-mail, to acmq@coe.ufrj.br

11/01/95












































